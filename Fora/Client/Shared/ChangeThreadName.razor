@inject IAuthService AuthService
@inject IThreadService ThreadService
@inject NavigationManager NavManager

<MudText Typo="Typo.h6">Change Created Thread Name</MudText>

<MudTable Items="@UserCreatedThreadsList" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Change Thread Name</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Sign">@context.Name</MudTd>
        <MudTd DataLabel="Change Thread Name"> <MudButton @onclick="(() => DisplayForm(context))">EDIT</MudButton></MudTd>
    </RowTemplate>
</MudTable>

@if(ShowEditForm)
{
    <EditForm Model="threadToUpdate" OnSubmit="ChangeThread">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Thread" @bind-Value="threadToUpdate.Name" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Change</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
}

<p>@Message</p>

@code {
    [Parameter]
    public int InterestId { get; set; }
    private List<ThreadModel> UserCreatedThreadsList { get; set; } = new();
    private UserAuth User { get; set; }
    private bool UserIsAdmin { get; set; }
    private bool ShowEditForm { get; set; }
    private string Message { get; set; }
    private int ThreadId { get; set; }
    private ThreadUpdateDto threadToUpdate { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        User = await AuthService.GetUser();
        UserIsAdmin = await AuthService.IsAdmin();
        UserCreatedThreadsList = await ThreadService.GetUserCreatedThreads(User.Id);
    }

    public void DisplayForm(ThreadModel Thread)
    {
        //Checks if user is admin or if the user is just a user, the messages count needs to be higher than 0 to edit thread name.
        if(UserIsAdmin || Thread.Messages.Count <= 0)
        {
            ShowEditForm = ShowEditForm == false ? true : false;
            ThreadId = Thread.Id;
            Message = "";
        }
        else if(Thread.Messages.Count > 0)
        {
            ShowEditForm = false;
            Message = "Not allowed to edit interest";
        }

    }

    private async Task ChangeThread()
    {
        threadToUpdate.Id = ThreadId;
        threadToUpdate.InterestId = InterestId;
        threadToUpdate.UserId = User.Id;
        await ThreadService.UpdateThread(threadToUpdate);
    }

}
