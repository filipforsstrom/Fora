@inject IAuthService AuthService
@inject IUserService UserService

<MudText Typo="Typo.h6">Change password</MudText>

<EditForm Model="userChangePassword" OnSubmit="CreateInterest">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Current password" @bind-Value="userChangePassword.CurrentPassword" />
                    <MudTextField Label="New password" @bind-Value="userChangePassword.NewPassword" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Change</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>



@code {
    UserAuth User { get; set; } = new();
    UserChangePasswordDto userChangePassword { get; set; } = new();
    bool success;

    protected async override Task OnInitializedAsync()
    {
        User = await AuthService.GetUser();
    }

    private async Task CreateInterest(EditContext context)
    {
        userChangePassword.Username = User.Username;
        await UserService.ChangePassword(userChangePassword);
        success = true;
        StateHasChanged();
    }
}
