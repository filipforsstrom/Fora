@inherits LayoutComponentBase

@*MudThemeProvider can only be used once. Currently in SwitchTheme*@
@*<MudThemeProvider />*@ 
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Fora</MudText>
        <MudSpacer />
        <AuthorizeView>
            <MudContainer MaxWidth="MaxWidth.Medium">
                <MudText Align="Align.Right">Hi @context.User.Identity.Name</MudText>
                @*<MudIcon Icon="@Icons.Outlined.WavingHand" Color="Color.Default" />*@
            </MudContainer>
        </AuthorizeView>
        <LoginLogoutButton />
        <SwitchTheme />
        @*<MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />*@
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            <AuthorizeView>
                @Body
@*                @context.User.Claims.Where(u => u.Type == "ForaUser").Select(u => u.Value).SingleOrDefault();
                @foreach (var claim in context.User.Claims.Where(u => u.Type == "ForaUser"))
                {
                    <p>@claim.Value</p>
                }*@
            </AuthorizeView>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}