@inject IInterestService InterestService
@inject IAuthService AuthService

<MudText Typo="Typo.h6">Remove Created Interest From User</MudText>

<MudTable Items="@Interests" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Delete Interest</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Id</MudTd>
        <MudTd DataLabel="Sign">@context.Name</MudTd>
        <MudTd DataLabel="Delete Interest">
            <MudButton @onclick="(() => DeleteInterest(context.Id))">X</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>


@code {

    public int InterestId { get; set; }
    private UserAuth User { get; set; }

    private List<InterestModel> Interests { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        User = await AuthService.GetUser();

        if (await AuthService.IsAdmin())
        {
            await InterestService.GetInterests();
            Interests = InterestService.Interests;
        }
        else
        {
            Interests = await InterestService.GetUserCreatedInterests(User.Id);
        }

    }

    public async Task DeleteInterest(int id)
    {
        InterestDeleteDto interestToDelete = new InterestDeleteDto
            {
                Id = id
            };

        await InterestService.DeleteInterest(interestToDelete);
        StateHasChanged();
    }

}
