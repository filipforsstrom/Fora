@inject IAuthService AuthService
@inject IInterestService InterestService

<MudText Typo="Typo.h6">Change Created Interest Name</MudText>

<MudTable Items="@UserCreatedInterestsList" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Change Interest Name</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Id</MudTd>
        <MudTd DataLabel="Sign">@context.Name</MudTd>
        <MudTd DataLabel="Change Interest Name"> <MudButton @onclick="(() => DisplayForm(context))">EDIT</MudButton></MudTd>
    </RowTemplate>
</MudTable>

@if(ShowEditForm)
{
    <EditForm Model="interestToUpdate" OnSubmit="ChangeInterest">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Interest" @bind-Value="interestToUpdate.Name" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Change</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
}

<p>@Message</p>

@code {
    private List<InterestModel> UserCreatedInterestsList { get; set; } = new();
    UserAuth user = new();
    private string? Message { get; set; }
    private bool ShowEditForm { get; set; }
    private int InterestId { get; set; }
    private bool UserIsAdmin { get; set; }
    private InterestUpdateDto interestToUpdate { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await AuthService.GetUser();
        UserIsAdmin = await AuthService.IsAdmin();
        UserCreatedInterestsList = await InterestService.GetUserCreatedInterests(user.Id);
    }

    public async Task ChangeInterest()
    {
        interestToUpdate.Id = InterestId;
        await InterestService.UpdateInterest(interestToUpdate);
    }

    public void DisplayForm(InterestModel interest)
    {
        if(UserIsAdmin || interest.Threads.Count <= 0)
        {
            ShowEditForm = ShowEditForm == false ? true : false;
            InterestId = interest.Id;
            Message = "";
        }
        else if(interest.Threads.Count > 0)
        {
            ShowEditForm = false;
            Message = "Not allowed to edit interest";
        }
        
    }
}
