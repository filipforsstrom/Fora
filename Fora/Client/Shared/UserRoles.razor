@inject IAuthService AuthService
@inject IUserService UserService

<MudPaper Width="300px">
    <MudList>
        @if (IsAdmin)
        {
            <MudListItem Text="You are Admin" />
        }
    </MudList>
</MudPaper>

<EditForm Model="@UserToChange" OnSubmit="AddRole">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Username"
                                  @bind-Value="UserToChange.Username" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Add admin role</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>
<EditForm Model="@UserToChange" OnSubmit="RemoveRole">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Username"
                                  @bind-Value="UserToChange.Username" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Error" Class="ml-auto">Remove admin role</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    UserAuth User { get; set; } = new();
    public bool IsAdmin { get; set; } = false;
    UserRoleDto UserToChange = new();

    protected async override Task OnInitializedAsync()
    {
        User = await AuthService.GetUser();
        IsAdmin = await AuthService.IsAdmin();
    }
    private async Task AddRole(EditContext context)
    {
        UserToChange.Role = "Admin";
        await UserService.AddRole(UserToChange);
        StateHasChanged();
    }
    private async Task RemoveRole(EditContext context)
    {
        UserToChange.Role = "Admin";
        await UserService.RemoveRole(UserToChange);
        StateHasChanged();
    }
}