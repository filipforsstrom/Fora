@using Fora.Client.Pages
    @inject IThreadService ThreadService
    @inject IAuthService AuthService

    <MudText Typo="Typo.h6">Create new thread</MudText>

       <EditForm Model="threadToCreate" OnSubmit="CreateThread">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Thread" Text="" @bind-Value="threadToCreate.Name" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Create</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>

@code {
    [Parameter]
    public int InterestId { get; set; }
    [Parameter]
    public EventCallback ResetThreads { get; set; }
    
    private ThreadCreateDto threadToCreate { get; set; } = new();
    private UserAuth User { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        User = await AuthService.GetUser();
    }

    public async Task CreateThread()
    {
        threadToCreate.UserId = User.Id;
        threadToCreate.InterestId = InterestId;
        await ThreadService.CreateThread(threadToCreate);
        await InvokeResetThreads();
    }

    private async Task InvokeResetThreads() => await ResetThreads.InvokeAsync();
}
