@inject IThreadService ThreadService
@inject IAuthService AuthService
@inject IDialogService DialogService

<MudText Typo="Typo.h6">Manage your threads</MudText>

<MudTable Items="@UserCreatedThreadsList" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Change Thread Name</MudTh>
        <MudTh>Delete Thread</MudTh>
    </HeaderContent>
    <RowTemplate>
        
        <ThreadToEdit ResetThreads=RefreshThreads Thread=@context User=User></ThreadToEdit>

    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    [Parameter]
    public int InterestId { get; set; }
    private List<ThreadModel> UserCreatedThreadsList { get; set; } = new();
    private string? Message { get; set; }
    private bool DisableEdit { get; set; } = true;
    private bool UserIsAdmin { get; set; }
    private UserAuth User { get; set; }

    protected override async Task OnInitializedAsync()
    {
        User = await AuthService.GetUser();
        UserIsAdmin = await AuthService.IsAdmin();

        if(UserIsAdmin)
        {
            //If interestId is 0 and user is admin, get all threads on settings page.
            //If interestId is the id of an actual interest in db and user is admin, admin gets access to edit all the threads in the corresponding interest.
            UserCreatedThreadsList = await ThreadService.GetThreads(InterestId);
        }
        else
        {
            //If interestId is 0 and user is not admin, get all threads that user created on settings page.
            //If interestId is the id of an actual interest in db, user only gets access to edit the threads they created in the interest.
            UserCreatedThreadsList = await ThreadService.GetUserCreatedThreads(User.Id, InterestId);
        }
    }

    public async Task RefreshThreads()
    {
        if(UserIsAdmin)
        {
            UserCreatedThreadsList = await ThreadService.GetThreads(InterestId);
        }
        else
        {
            UserCreatedThreadsList = await ThreadService.GetUserCreatedThreads(User.Id, InterestId);
        }
    }

}
