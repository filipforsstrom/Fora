@page "/login"

@*move to Services*@
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@*move to Services*@

@using System.ComponentModel.DataAnnotations

<EditForm Model="@user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="First name"
                                  @bind-Value="user.Username" For="@(() => user.Username)" />
                    <MudTextField Label="Password" Class="mt-3"
                                  @bind-Value="user.Password" For="@(() => user.Password)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    UserLoginDto user = new UserLoginDto();

    async Task HandleLogin()
    {
        var result = await Http.PostAsJsonAsync("api/authentication/login", user);
        var token = await result.Content.ReadAsStringAsync();
        await LocalStorage.SetItemAsync("token", token);
        await AuthStateProvider.GetAuthenticationStateAsync();
    }
}
