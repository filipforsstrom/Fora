@page "/messages/{thread:int}"
@inject IMessageService MessageService
@inject IAuthService AuthService

<MudTable Items=Messages Hover="true" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>UserId</MudTh>
        <MudTh>Message</MudTh>
        <MudTh>Posted</MudTh>
    </HeaderContent>
    <RowTemplate>

        <Message Msg="@context" User="User"></Message>
        

    </RowTemplate>
</MudTable>

    <CascadingValue Value="this">
                <PostMessage UserId="User.Id" ThreadId="Thread"></PostMessage>
        </CascadingValue>

@code {
    [Parameter]
    public int Thread { get; set; }
    private List<MessageModel> Messages { get; set; }
    private UserAuth User { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Messages = await MessageService.GetMessages(Thread);
        User = await AuthService.GetUser();
    }

    public void RefreshMessages()
    {
        //Called from child component PostMessage. Refreshes messages when user has posted a new message.
        this.StateHasChanged();
    }

}
